syntax = "proto3";

package GIGAPuppetMasterProto;

service GIGAPuppetMasterService {
  rpc FreezeServerService (FreezeServerRequest) returns (FreezeServerReply);
  rpc UnfreezeServerService (UnfreezeServerRequest) returns (UnfreezeServerReply);
  rpc StatusService (StatusRequest) returns (StatusReply);
  rpc PartitionService (PartitionRequest) returns (PartitionReply); 
  rpc CrashServerService (CrashServerRequest) returns (CrashServerReply); 
}

/* Freeze Command */
message FreezeServerRequest {
}

message FreezeServerReply {
	bool ok = 1;
}

/* Unfreeze Command */
message UnfreezeServerRequest {
}

message UnfreezeServerReply {
	bool ok = 1;
}

/* Status Command */
message StatusRequest {

}

message StatusReply {
	bool ok = 1;
}

/* Partition Command */
message PartitionRequest {
	int32 replication_factor = 1;
	string partition_id = 2;
	repeated ServerObject servers = 3;
}

message PartitionReply {
	bool ok = 1;
}

/* Crash Command */
message CrashServerRequest {
}

message CrashServerReply {
	bool ok = 1;
}

message ServerObject {
	string id = 1;
	string url = 2;
}

