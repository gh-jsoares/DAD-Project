syntax = "proto3";

package GIGAPartitionProto;

service GIGAPartitionService {
	rpc LockObject (LockObjectRequest) returns (LockObjectReply);
	rpc WriteObject (WriteObjectRequest) returns (WriteObjectReply);
	rpc Vote (VoteRequest) returns (VoteReply);
	rpc SendLeader (SendLeaderRequest) returns (SendLeaderReply);
	rpc ServerCrash (ServerCrashRequest) returns (ServerCrashReply);
	rpc AppendEntries (AppendEntriesRequest) returns (AppendEntriesReply);
}

/* Lock Message */
message LockObjectRequest {
	string partition_id = 1;
	string object_id = 2;
}

message LockObjectReply {
	bool ok = 1;
}

/* Write and unlock Message */
message WriteObjectRequest {
	string partition_id = 1;
	string object_id = 2;
	string value = 3;
}

message WriteObjectReply {
	bool ok = 1;
}

/*------ RAFT Messages --------*/

//Ask for votes
message VoteRequest{
	int32 term = 1;
	string server_id = 2;
	int32 lastLogIndex = 3;
	int32 lastLogTerm = 4;
	string partition_id = 5;
}

message VoteReply{
	int32 term = 1;
	bool voteForCandidate = 2;
	string partition_id = 3;
	string server_id = 4;
}

message AppendEntriesRequest {
	string partition_id = 1;
	string server_id = 2;
	int32 term = 3;
	LogEntryProto entry = 4;
	repeated LogEntryProto last_committed_logs = 5;
}

message AppendEntriesReply {
	bool ok = 1;
	int32 term = 2;
	LogEntryProto last_committed_log = 3;
}

//Tell everyone you're the new leader -> TODO - Should be a AppendEntries RPC
message SendLeaderRequest{
	int32 term = 1;
	string partition_id = 2;
	string server_id = 3;
}

message SendLeaderReply{
	int32 term = 1;
	bool ok = 2;
}

//Alert of a server crash
message ServerCrashRequest{
	string server_id = 1;
	string partition_id = 2;
}

message ServerCrashReply{
	bool ok = 1;
}

// Objects
message LogEntryProto {
	int32 term = 1;
	int32 log = 2;
	string object_id = 3;
	string value = 4;
}